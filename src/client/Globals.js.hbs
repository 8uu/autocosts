/************************************************
**                                             **
**              AUTOCOSTS.INFO                 **
**      the automobile costs calculator        **
**                                             **
************************************************/

/*#############################################################################*/
/*THESE ARE GLOBAL VARIABLES TO BE DEALT EXCLUSIVELY BY THE CODE, DO NOT CHANGE*/

/*File with Javascript Global variables rendered by handlebars to be inserted inline*/

/*In this file for comments ALWAYS use bar-star star-bar / * comments * / */
/*the minification tool removes newlines and thus double-bar-comments break the code */

/*GLOBAL switches, change accordingly*/
var SWITCHES = {
    "https": JSON.parse('{{{ serverData.settings.switches.https }}}'),                 /*true for https, false for http*/    
    "uber": JSON.parse('{{{ serverData.settings.switches.uber }}}'),                   /*Uber*/
    "social": JSON.parse('{{{ serverData.settings.switches.social }}}'),               /*Social media pulgins*/
    "charts": JSON.parse('{{{ negate serverData.settings.switches.disableCharts }}}'), /*Charts*/
    "g_captcha": JSON.parse('{{{ serverData.settings.switches.googleCaptcha }}}'),     /*Google Captcha*/
    "g_analytics": JSON.parse('{{{ serverData.settings.switches.googleAnalytics }}}'), /*Google Analytics*/
    "data_base": JSON.parse('{{{ serverData.settings.switches.dataBase }}}'),          /*Inserts user input data into DataBase*/
    "print": JSON.parse('{{{ serverData.settings.switches.print }}}'),                 /*Print option*/
    "pdf": JSON.parse('{{{ serverData.settings.switches.pdf }}}')                      /*Download PDF report option*/
};

/*Define GLOBAL Javascript variables*/
var COUNTRY = '{{{ CC }}}';
/*Language code according to ISO_639-1 codes*/
var LANGUAGE = '{{{ clientData.languageCode }}}';
/*List of countries and domains in a Javascript Object*/
var COUNTRY_LIST = JSON.parse('{{{ json serverData.availableCountries }}}');
var DOMAIN_LIST  = JSON.parse('{{{ json serverData.domainsCountries }}}');

var CDN_URL       = '{{{ serverData.settings.cdn.url }}}'; /*it's defined in the node server side index.js*/
var HTTP_Protocol = '{{{ clientData.httpProtocol }}}'; /*it's defined in node server side index.js*/

var clientDir = '{{{ serverData.directories.client.client }}}';

var WORDS = JSON.parse('{{{ jsonEscap words }}}');
var INITIAL_TEX = '{{{ escapeStr words.initial_text }}}';

/*Google analytics Tracking ID*/
var GA_TRACKING_ID = '{{{ serverData.settings.googleAnalytics.trackingId }}}';

/*true when this session does not come from localhost*/
var NOT_LOCALHOST = JSON.parse('{{{ clientData.notLocalhost }}}');

/*forms present page full url, example 'http://autocosts.info/UK' */
var PAGE_URL = HTTP_Protocol + "://" + DOMAIN_LIST[COUNTRY] + "/" + COUNTRY;

/*it may be changed accordingly*/
var LANG_JSON_DIR         = CDN_URL + "countries" + "/"; /* Directory of JSON Translation files  */
var STATS_HTML_TABLES_DIR = CDN_URL + "tables" + "/";    /* Directory of statistical html tables */
var STATS_JPG_TABLES_DIR  = CDN_URL + "tables" + "/";    /* Directory of statistical jpg tables  */

/*Location of Javascript Files, it may be changed accordingly*/
var rootClientURL = CDN_URL + clientDir + "/";
var JS_FILES = {
    Google : {
        recaptchaAPI : "https://www.google.com/recaptcha/api.js?onload=grecaptcha_callback&render=explicit&hl="+LANGUAGE,
    },

    initialize :          rootClientURL + "initialize.js",
    documentFunctions :   rootClientURL + "documentFunctions.js",
    formFunctions :       rootClientURL + "formFunctions.js",
    validateForm :        rootClientURL + "validateForm.js",    
    g_recaptcha :         rootClientURL + "g-recaptcha.js",
    conversionFunctions : rootClientURL + "conversionFunctions.js",
    coreFunctions :       rootClientURL + "core/coreFunctions.js",
    getData :             rootClientURL + "getData.js",
    printResults :        rootClientURL + "printResults.js",
    print :               rootClientURL + "print.js",
    dbFunctions :         rootClientURL + "dbFunctions.js",

    jQuery : '{{{ serverData.fileNames.client.jquery.uri }}}',
    jTimer : rootClientURL + "jquery/js_timer.js",

    PDF : {
        pdfmake :         '{{{ serverData.fileNames.client.pdfmake.uri }}}',
        generatePDF :     rootClientURL + "pdf/generatePDF.js",
        vfs_fonts :       '{{{ serverData.fileNames.client.vfs_fonts.uri }}}',
        vfs_fonts_IN :    rootClientURL + "pdf/IN/vfs_fonts.js",
        vfs_fonts_JP :    rootClientURL + "pdf/JP/vfs_fonts.js",
        vfs_fonts_CN :    rootClientURL + "pdf/CN/vfs_fonts.js"
    },

    drawCostsCharts :     rootClientURL + "chartjs/drawCostsCharts.js",
    chartjs :             rootClientURL + "chartjs/Chart.min.js",
    jAlert :              rootClientURL + "jAlert/jAlert.js",
    jssocials :           "https://cdnjs.cloudflare.com/ajax/libs/jsSocials/1.5.0/jssocials.min.js"
};

var UBER_FILE = "getUBER/" + COUNTRY;

/*global function variables for function expressions */
var Run1, PrintElem, generatePDF, TimeCounter;
Run1 = PrintElem = generatePDF = TimeCounter = function(){console.error("Function called and not yet loaded");};

/*global variable for Google reCaptcha*/
var IS_HUMAN_CONFIRMED = false;
/*object from UBER API, with UBER city data*/
var UBER_API = {};

/*calculated information after user clicks "Run", calculated from coreFunctions.js*/
var CALCULATED = {
    data:     {},  /*calculated data (costs, financial effort, etc.)*/
    uber:     {}   /*calculated UBER as alternative to car, calculated from core functions*/
};

/*Global Object regarding the display of information*/
var DISPLAY = {
    centralFrameWidth :  0,  /*width of central frame #div2*/
    descriptionHTML :   "",
    /*result information got after user click "run"*/
    result: {
        isShowing          : false,  /*tells whether the result with result tables is being shown*/
        fin_effort         : false,
        public_transports  : false,
        uber               : false,
        ext_costs          : false
    },
    charts: {
        isMonthlyCostsPieChart: false,  /*prints chart bool variable*/
        isMonthlyCostsBarChart: false,  /*prints chart bool variable*/
        isFinEffortChart:       false,  /*prints chart bool variable*/
        isAlterToCarChart:      false,  /*prints chart bool variable*/
        pieChart: 0,
        barChart: 0,
        finEffort: 0,
        alterToCar: 0
    }
};

/*Service availability. Later on in the code, the variables might be set to TRUE*/
/*if the services are available. Therefore do not change these values here*/
var SERVICE_AVAILABILITY = {
    g_captcha     : false,   /*variable that says whether Google Captcha JS files are available*/
    g_analytics   : false    /*variable that says whether Google Analytics JS files are available*/
};


/*defer loading of jQuery*/
(function() {
    function getScript(url,success){
        var script=document.createElement('script');
        script.src=url;
        var head=document.getElementsByTagName('head')[0],
            done=false;
        script.onload=script.onreadystatechange = function(){
            if ( !done && (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete') ) {
                done=true;
                success();
                script.onload = script.onreadystatechange = null;
                head.removeChild(script);
            }
        };
        head.appendChild(script);
    }
    getScript(JS_FILES.jQuery,function(){
        getScript(JS_FILES.initialize, function(){});
    });
})();

